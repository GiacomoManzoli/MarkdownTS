{"version":3,"sources":["webpack://MarkdownTS/webpack/universalModuleDefinition","webpack://MarkdownTS/webpack/bootstrap","webpack://MarkdownTS/./src/engine.ts","webpack://MarkdownTS/./src/index.ts","webpack://MarkdownTS/./src/parser.ts","webpack://MarkdownTS/./src/rules/BlockQuoteRule.ts","webpack://MarkdownTS/./src/rules/CodeBlockRule.ts","webpack://MarkdownTS/./src/rules/HyperLinkRule.ts","webpack://MarkdownTS/./src/rules/ImageRule.ts","webpack://MarkdownTS/./src/rules/LineRule.ts","webpack://MarkdownTS/./src/rules/ListRule.ts","webpack://MarkdownTS/./src/rules/ParagraphRule.ts","webpack://MarkdownTS/./src/rules/RuleScope.ts","webpack://MarkdownTS/./src/rules/TextStyleRules.ts","webpack://MarkdownTS/./src/rules/TitleRule.ts","webpack://MarkdownTS/./src/rules/index.ts","webpack://MarkdownTS/./src/rules/rule.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MarkdownTS\"] = factory();\n\telse\n\t\troot[\"MarkdownTS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Parser } from \"./parser\";\n\nexport class Engine {\n    parser: Parser;\n\n    constructor(parser?: Parser) {\n        this.parser = parser !== undefined? parser : Parser.createDefaultParser();\n    }\n\n    render(markdown: string) {\n        return this.parser.parseMarkdown(markdown);\n    }\n}\n\n","export { Engine } from \"./engine\";\nexport { Parser } from \"./parser\";","import * as Rules from \"./rules\";\n\nexport function sortRulesByScope(rules: Rules.ParsingRule[]) {\n    return rules.sort((a,b) => {\n        if (a.getScope() < b.getScope()) {\n            return -1;\n        } else if (a.getScope() > b.getScope()) {\n            return 1;\n        } else {\n            return 0;\n        }\n    });\n}\n\nexport class Parser {\n    rules: Rules.ParsingRule[];\n    constructor(rules:Rules.ParsingRule[] = []) {\n        this.rules = sortRulesByScope([...rules]);\n    }\n\n    addRule(rule: Rules.ParsingRule) {\n        this.rules.push(rule);\n        this.rules = sortRulesByScope(this.rules);\n        return this;\n    }\n\n    parseMarkdown(markdown: string) : string {\n        let text = markdown;\n\n        let history = [];\n\n        this.rules.forEach(rule => {\n            console.log(`Applying rule: ${rule.constructor.name}`);\n            let log = {\n                rule: rule.constructor.name,\n                input: text,\n                output: rule.applyTo(text)\n            };\n            history.push(log);\n            text = log.output;\n        })\n        console.table(history);\n        return text;\n    }\n\n    static createDefaultParser() {\n        const p = new Parser([\n            new Rules.TitleRule(),\n            new Rules.ImageRule(),\n            new Rules.HyperLinkRule(),\n            new Rules.BoldRule(),\n            new Rules.ItalicRule(),\n            new Rules.StrikeRule(),\n            new Rules.QuoteRule(),\n            new Rules.LineRule(),\n            new Rules.InlineCodeRule(),\n            new Rules.ListRule(),\n            new Rules.CodeBlockRule(),\n            new Rules.ExecutableBlockRule(),\n            new Rules.BlockQuoteRule(),\n            new Rules.ParagraphRule(),\n        ]);\n        return p;\n    }\n}","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nconst TAG1 = \">\";\nconst TAG2 = \"&gt;\"\n\nexport class BlockQuoteRule extends ParsingRule {\n    maxLevel: number;\n\n    constructor() {\n        // super(/^(\\t{0,})(\\*|-|\\d.)\\s(.*)/gm);\n        // Preseleziona una lista\n        // imponendo che ci sia almeno una riga vuota prima della lista e che la lista non sia alla fine del file\n        // vedi esempio sotto\n        // const preselectRegex = /\\n\\n(^(\\t{0,})(\\*|-|\\d.).*\\n)+\\n?/gm;\n        const preselectRegex = /^((?:&gt;)+|>+)(.*)$/gm;\n\n        super(preselectRegex);\n        this.scope = RuleScope.BLOCK;\n        this.maxLevel = 0;\n    }\n\n    replace(match: string, tag: string, text: string): string {\n        const level = this.calculateLevel(tag);\n        this.maxLevel = Math.max(level, this.maxLevel);\n        const tagOpen = \"<blockquote>\";\n        const tagClose = \"</blockquote>\";\n        const result = tagOpen.repeat(level) + \"\\n\" + text.trim() + \"\\n\" + tagClose.repeat(level);\n        return result;\n    }\n\n    calculateLevel(tagSequence: string): number {\n        let tag = tagSequence.startsWith(TAG1) ? TAG1 : \"\";\n        tag = tagSequence.startsWith(TAG2) ? TAG2 : tag;\n\n        const validSequence = tag !== \"\";\n        if (validSequence) {\n            const leftover = tagSequence.substring(tag.length);\n            return 1 + this.calculateLevel(leftover);\n        } else {\n            return 0;\n        }\n    }\n\n\n\n    afterReplace(text: string): string {\n        for (let i = 1; i <= this.maxLevel; i++) {\n            text = text.replace(/\\<\\/blockquote>\\s?\\<blockquote>/gm, \"\");\n        }\n        return `\\n${text}\\n`;\n    }\n}\n","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport interface BlockRenderer {\n    render(...args: string[]) : string;\n}\n\nexport interface CodeBlockRenderer extends BlockRenderer {\n    render(block: string, language: string, code: string): string;\n}\n\nexport class PlainCodeBlockRenderer implements CodeBlockRenderer {\n    render(block: string, language: string, code: string): string {\n        return `<pre class=\"${language}\">${code}</pre>`;\n    }\n}\n\nexport class RenderableBlockRule extends ParsingRule {\n    renderer: BlockRenderer;\n\n    constructor(matcher: RegExp, renderer: BlockRenderer) {\n        super(matcher);\n        this.scope = RuleScope.BLOCK;\n        this.renderer = renderer;\n    }\n\n    replace(...args: string[]): string {\n        return this.renderer.render(...args);\n    }\n}\n\n\nexport class CodeBlockRule extends RenderableBlockRule {\n    constructor(render: BlockRenderer = new PlainCodeBlockRenderer()) {\n        super(/```([a-z]*)\\n([\\s\\S]*?)\\n```/g, render);\n    }\n}\n\nexport class ExecutableBlockRule extends RenderableBlockRule {\n    constructor(render: BlockRenderer = new PlainCodeBlockRenderer()) {\n        super(/&&&([a-z]*)\\n([\\s\\S]*?)\\n&&&/g, render);\n    }\n}","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class HyperLinkRule extends ParsingRule {\n    constructor() {\n        super(/\\[([^[]+)\\]\\(([^)]+)\\)/g);\n        this.scope = RuleScope.INLINE;\n    }\n\n    replace(match, text, href): string {\n        return `<a href=\\\"${href}\\\">${text}</a>`;\n    }\n}","import {ParsingRule} from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class ImageRule extends ParsingRule {\n    constructor() {\n        super(/!\\[([^[]+)\\]\\(([^)]+)\\)/g);\n        this.scope = RuleScope.INLINE;\n    }\n\n    replace(text, caption, source): string {\n        return `<img src=\\\"${source}\\\" alt=\\\"${caption}\\\" />`;\n    }\n}","import {ParsingRule} from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class LineRule extends ParsingRule {\n    constructor() {\n        super(/\\n-{3,}/g);\n        this.scope = RuleScope.BLOCK;\n    }\n\n    replace(): string {\n        return \"\\n<hr />\";\n    }\n}","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class ListRule extends ParsingRule {\n    maxLevel: number;\n    listRegex: RegExp;\n\n    constructor() {\n        // super(/^(\\t{0,})(\\*|-|\\d.)\\s(.*)/gm);\n        // Preseleziona una lista\n        // imponendo che ci sia almeno una riga vuota prima della lista e che la lista non sia alla fine del file\n        // vedi esempio sotto\n        // const preselectRegex = /\\n\\n(^(\\t{0,})(\\*|-|\\d.).*\\n)+\\n?/gm;\n        // const preselectRegex = /\\n?\\n?(^(\\t{0,})(\\*|-|\\d.).*\\n?)+/gm;\n        const preselectRegex = /\\n{0,2}(^(\\t{0,})(\\*|-|\\d.)\\s.*\\n?)+/gm;\n        super(preselectRegex)\n        this.listRegex = /^(\\t{0,})(\\*|-|\\d.)\\s(.*)/gm\n        this.maxLevel = 0;\n        this.replaceList = this.replaceList.bind(this);\n        this.scope = RuleScope.BLOCK\n    }\n\n\n    replace(match): string {\n        const result = match.replace(this.listRegex, this.replaceList);\n        return result;\n    }\n\n    replaceList(match, tabs: string, symbol: string, text: string): string {\n        const level = tabs.length + 1;\n        this.maxLevel = Math.max(level, this.maxLevel);\n        const listType = symbol === \"*\" || symbol === \"-\" ? \"ul\" : \"ol\";\n\n        const tagOpen = `<${listType}><li>`;\n        const tagClose = `</li></${listType}>`;\n\n        let result = tagOpen.repeat(level) + `<span>${text}</span>` + tagClose.repeat(level) + \"\\n\";\n\n        return result;\n    }\n\n\n    afterReplace(text: string): string {\n        console.log(\"a\"+text+\"a\");\n        for (let i = 1; i <= this.maxLevel; i++) {\n            text = text.replace(/\\<\\/ul>\\s*\\<ul>/gm, \"\");\n            text = text.replace(/\\<\\/ul>\\s*\\<ol>/gm, \"\");\n            text = text.replace(/\\<\\/ol>\\s*\\<ol>/gm, \"\");\n            text = text.replace(/\\<\\/ol>\\s*\\<ul>/gm, \"\");\n\n            text = text.replace(/\\<\\/li>\\s*\\<li>\\s*\\<ul>/gm, \"<ul>\");\n            text = text.replace(/\\<\\/li>\\s*\\<li>\\s*\\<ol>/gm, \"<ol>\");\n        }\n        console.log(\"b\"+text+\"b\");\n        console.log(\"c\"+`\\n${text.trim()}\\n`+\"c\");\n\n        return `\\n${text.trim()}\\n`;\n    }\n}\n\n/**\nla preselectRegex seleziona solamente la prima e la quarta lista. se non ci fosse il ritorna a capo finale non prenderebbe\nneanche l'ultima\n\nasddasd\n\n* elem 1\n* elem 2\n\t- child 1\n\t\t* child 2 \n\t\t\t* child 2 \n\t* child 2 \n\nasd\n\t\t* child 1\n* elem 3\n\t* child 1\n\nasd\n\n\nasd\n\n* elem 1\n* elem 2\n\t1. child 1\n\t2. child 2 \nasd\n\nasd\n\n\t\t* child 1\n* elem 3\n\t* child 1\n \n */","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class ParagraphRule extends ParsingRule {\n    constructor() {\n        super(/^([^\\n>&`#<]+.*)$/gm);\n        this.scope = RuleScope.BLOCK;\n    } \n\n    replace(match: string, text: string): string {\n        return `\\n<p>${text.trim()}</p>\\n`;\n    }\n\n    afterReplace(text: string): string {\n        return text.replace(/<\\/p>\\s<p>/g,' ');\n    }\n}","export enum RuleScope {\n    BLOCK = 10,\n    INLINE = 20,\n    UNSET = 30\n};","import {ParsingRule} from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nclass InlineTextRule extends ParsingRule {\n    tagOpen: string;\n    tagClose: string;\n\n    constructor(regex, tagOpen, tagClose) {\n        super(regex);\n        this.tagOpen = tagOpen;\n        this.tagClose = tagClose;\n        this.scope = RuleScope.INLINE;\n    }\n\n    replace(match, g1): string {\n        return `${this.tagOpen}${g1}${this.tagClose}`;\n    }\n}\n\nexport class BoldRule extends ParsingRule {\n    constructor() {\n        super(/(\\*\\*|__)(.*?)\\1/g);\n        this.scope = RuleScope.INLINE;\n\n    }\n\n    replace(match, g1, g2): string {\n        return `<strong>${g2}</strong>`;\n    }\n}\n\nexport class ItalicRule extends ParsingRule {\n    constructor() {\n        super(/(\\*|_)(.*?)\\1/g);\n        this.scope = RuleScope.INLINE;\n\n    }\n\n    replace(match, g1, g2): string {\n        return `<em>${g2}</em>`;\n    }\n}\n\nexport class StrikeRule extends InlineTextRule {\n    constructor() {\n        super(/~~(.*?)~~/g, \"<del>\", \"</del>\");\n    }\n}\n\nexport class InlineCodeRule extends InlineTextRule {\n    constructor() {\n        super(/`([^`\\n]+)`/g, \"<code>\", \"</code>\");\n    }\n}\n\nexport class QuoteRule extends InlineTextRule {\n    constructor() {\n        super(/:\"(.*?)\":/g,\"<q>\",\"</q>\");\n    }\n\n}\n\n\n","import { ParsingRule } from \"./rule\";\nimport { RuleScope } from \"./RuleScope\";\n\nexport class TitleRule extends ParsingRule {\n    constructor() {\n        super(/(#+)(.*)/g);\n        this.scope = RuleScope.BLOCK;\n    }\n\n    replace(text, chars, content): string {\n        var level = chars.length;\n        return '<h' + level + '>' + content.trim() + '</h' + level + '>';\n    }\n}","export { ParsingRule } from \"./rule\";\nexport { TitleRule } from \"./TitleRule\";\nexport { ImageRule } from \"./ImageRule\";\nexport { QuoteRule, BoldRule, ItalicRule, StrikeRule, InlineCodeRule } from \"./TextStyleRules\";\nexport { HyperLinkRule } from \"./HyperLinkRule\";\nexport { ListRule } from \"./ListRule\";\nexport { LineRule } from \"./LineRule\";\nexport { CodeBlockRule, ExecutableBlockRule } from \"./CodeBlockRule\";\nexport { BlockQuoteRule } from \"./BlockQuoteRule\";\nexport { ParagraphRule } from \"./ParagraphRule\";\nexport { RuleScope} from \"./RuleScope\";","import { RuleScope } from \"./RuleScope\";\n\nexport class ParsingRule {\n    regex: RegExp;\n    scope: RuleScope;\n    \n    constructor(regex: RegExp) {\n        this.regex = regex;\n        this.scope = RuleScope.UNSET;\n    }\n\n    getScope(): RuleScope {\n        return this.scope;\n    }\n\n    applyTo(text: string): string {\n        const replaceResult = text.replace(this.regex, this.replace.bind(this));\n        return this.afterReplace(replaceResult);\n        // const doReplace = () => text.replace(this.regex, this.replace.bind(this));\n        // return this.afterReplace(doReplace());\n\n    }\n\n    replace(match: string, ...args: any[]): string {\n        throw new Error(\"asd\");\n    }\n\n    afterReplace(text: string): string {\n        return text;\n    }\n}\n\n"],"sourceRoot":""}