{"version":3,"sources":["webpack://MarkdownTS/webpack/universalModuleDefinition","webpack://MarkdownTS/webpack/bootstrap","webpack://MarkdownTS/./src/rules/rule.ts","webpack://MarkdownTS/./src/parser.ts","webpack://MarkdownTS/./src/index.ts","webpack://MarkdownTS/./src/engine.ts","webpack://MarkdownTS/./src/rules/index.ts","webpack://MarkdownTS/./src/rules/TitleRule.ts","webpack://MarkdownTS/./src/rules/ImageRule.ts","webpack://MarkdownTS/./src/rules/TextStyleRules.ts","webpack://MarkdownTS/./src/rules/HyperLinkRule.ts","webpack://MarkdownTS/./src/rules/ListRule.ts","webpack://MarkdownTS/./src/rules/LineRule.ts","webpack://MarkdownTS/./src/rules/CodeBlockRule.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ParsingRule","regex","this","applyTo","text","replaceResult","replace","afterReplace","match","args","_i","arguments","length","Error","Rules","Parser","rules","slice","addRule","rule","push","parseMarkdown","markdown","forEach","createDefaultParser","TitleRule","ImageRule","HyperLinkRule","BoldRule","ItalicRule","StrikeRule","QuoteRule","LineRule","InlineCodeRule","ListRule","CodeBlockRule","engine_1","Engine","parser_1","parser","undefined","render","rule_1","TitleRule_1","ImageRule_1","TextStyleRules_1","HyperLinkRule_1","ListRule_1","LineRule_1","CodeBlockRule_1","_super","__extends","chars","content","level","trim","caption","source","InlineTextRule","tagOpen","tagClose","_this","g1","g2","href","listRegex","maxLevel","replaceList","tabs","symbol","Math","max","listType","repeat","PlainCodeBlockRenderer","renderCode","language","code","codeRenderer"],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MarkdownTS\"] = factory();\n\telse\n\t\troot[\"MarkdownTS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export class ParsingRule {\n    regex: RegExp;\n\n    constructor(regex:RegExp) {\n        this.regex = regex;\n    }\n\n    applyTo(text: string) : string {\n        const replaceResult = text.replace(this.regex, this.replace.bind(this));\n        return this.afterReplace(replaceResult);\n    }\n\n    replace(match: string, ...args: any[]): string {\n        throw new Error(\"asd\");\n    }\n\n    afterReplace(text: string) : string {\n        return text;\n    }\n}\n\n","import * as Rules from \"./rules\";\n\n\nexport class Parser {\n    rules: Rules.ParsingRule[];\n    constructor(rules?:Rules.ParsingRule[]) {\n        this.rules = [...rules];\n    }\n\n    addRule(rule: Rules.ParsingRule) {\n        this.rules.push(rule);\n        return this;\n    }\n\n    parseMarkdown(markdown: string) : string {\n        let text = markdown;\n        this.rules.forEach(rule => {\n            text = rule.applyTo(text)   \n        })\n        return text;\n    }\n\n    static createDefaultParser() {\n        const p = new Parser([\n            new Rules.TitleRule(),\n            new Rules.ImageRule(),\n            new Rules.HyperLinkRule(),\n            new Rules.BoldRule(),\n            new Rules.ItalicRule(),\n            new Rules.StrikeRule(),\n            new Rules.QuoteRule(),\n            new Rules.LineRule(),\n            new Rules.InlineCodeRule(),\n            new Rules.ListRule(),\n            new Rules.CodeBlockRule()\n        ]);\n        return p;\n    }\n}","export { Engine } from \"./engine\";\nexport { Parser } from \"./parser\";","import { Parser } from \"./parser\";\n\nexport class Engine {\n    parser: Parser;\n\n    constructor(parser?: Parser) {\n        this.parser = parser !== undefined? parser : Parser.createDefaultParser();\n    }\n\n    render(markdown: string) {\n        return this.parser.parseMarkdown(markdown);\n    }\n}\n\n","export { ParsingRule } from \"./rule\";\nexport { TitleRule } from \"./TitleRule\";\nexport { ImageRule } from \"./ImageRule\";\nexport { QuoteRule, BoldRule, ItalicRule, StrikeRule, InlineCodeRule } from \"./TextStyleRules\";\nexport { HyperLinkRule } from \"./HyperLinkRule\";\nexport { ListRule } from \"./ListRule\";\nexport { LineRule } from \"./LineRule\";\nexport { CodeBlockRule} from \"./CodeBlockRule\";","import { ParsingRule } from \"./rule\";\n\nexport class TitleRule extends ParsingRule {\n    constructor() {\n        super(/(#+)(.*)/g);\n    }\n\n    replace(text, chars, content): string {\n        var level = chars.length;\n        return '<h' + level + '>' + content.trim() + '</h' + level + '>';\n    }\n}","import {ParsingRule} from \"./rule\";\n\nexport class ImageRule extends ParsingRule {\n    constructor() {\n        super(/!\\[([^[]+)\\]\\(([^)]+)\\)/g);\n    }\n\n    replace(text, caption, source): string {\n        return `<img src=\\\"${source}\\\" alt=\\\"${caption}\\\" />`;\n    }\n}","import {ParsingRule} from \"./rule\";\n\nclass InlineTextRule extends ParsingRule {\n    tagOpen: string;\n    tagClose: string;\n\n    constructor(regex, tagOpen, tagClose) {\n        super(regex);\n        this.tagOpen = tagOpen;\n        this.tagClose = tagClose;\n    }\n\n    replace(match, g1): string {\n        return `${this.tagOpen}${g1}${this.tagClose}`;\n    }\n}\n\nexport class BoldRule extends ParsingRule {\n    constructor() {\n        super(/(\\*\\*|__)(.*?)\\1/g);\n    }\n\n    replace(match, g1, g2): string {\n        return `<strong>${g2}</strong>`;\n    }\n}\n\nexport class ItalicRule extends ParsingRule {\n    constructor() {\n        super(/(\\*|_)(.*?)\\1/g);\n    }\n\n    replace(match, g1, g2): string {\n        return `<em>${g2}</em>`;\n    }\n}\n\nexport class StrikeRule extends InlineTextRule {\n    constructor() {\n        super(/~~(.*?)~~/g, \"<del>\", \"</del>\");\n    }\n}\n\nexport class InlineCodeRule extends InlineTextRule {\n    constructor() {\n        super(/`([^`\\n]+)`/g, \"<code>\", \"</code>\");\n    }\n}\n\nexport class QuoteRule extends InlineTextRule {\n    constructor() {\n        super(/:\"(.*?)\":/g,\"<q>\",\"</q>\");\n    }\n\n}\n\n\n","import { ParsingRule } from \"./rule\";\n\nexport class HyperLinkRule extends ParsingRule {\n    constructor() {\n        super(/\\[([^[]+)\\]\\(([^)]+)\\)/g);\n    }\n\n    replace(match, text, href): string {\n        return `<a href=\\\"${href}\\\">${text}</a>`;\n    }\n}","import { ParsingRule } from \"./rule\";\n\nexport class ListRule extends ParsingRule {\n    maxLevel: number;\n    listRegex: RegExp;\n\n    constructor() {\n        // super(/^(\\t{0,})(\\*|-|\\d.)\\s(.*)/gm);\n        // Preseleziona una lista\n        // imponendo che ci sia almeno una riga vuota prima della lista e che la lista non sia alla fine del file\n        // vedi esempio sotto\n        // const preselectRegex = /\\n\\n(^(\\t{0,})(\\*|-|\\d.).*\\n)+\\n?/gm;\n        const preselectRegex = /\\n?\\n?(^(\\t{0,})(\\*|-|\\d.).*\\n?)+/gm;\n        \n        super(preselectRegex)\n        this.listRegex = /^(\\t{0,})(\\*|-|\\d.)\\s(.*)/gm\n        this.maxLevel = 0;\n        this.replaceList = this.replaceList.bind(this);\n    }\n\n\n    replace(match): string {\n        const result = match.replace(this.listRegex, this.replaceList).trim();\n        return result;\n    }\n\n    replaceList(match, tabs: string, symbol: string, text: string): string {\n        const level = tabs.length + 1;\n        this.maxLevel = Math.max(level, this.maxLevel);\n        const listType = symbol === \"*\" || symbol === \"-\" ? \"ul\" : \"ol\";\n\n        const tagOpen = `<${listType}><li>`;\n        const tagClose = `</li></${listType}>`;\n\n        let result = tagOpen.repeat(level) + `<span>${text}</span>` + tagClose.repeat(level) + \"\\n\";\n\n        return result;\n    }\n\n\n    afterReplace(text: string): string {\n        for (let i = 1; i <= this.maxLevel; i++) {\n            text = text.replace(/\\<\\/ul>\\s*\\<ul>/gm, \"\");\n            text = text.replace(/\\<\\/ul>\\s*\\<ol>/gm, \"\");\n            text = text.replace(/\\<\\/ol>\\s*\\<ol>/gm, \"\");\n            text = text.replace(/\\<\\/ol>\\s*\\<ul>/gm, \"\");\n\n            text = text.replace(/\\<\\/li>\\s*\\<li>\\s*\\<ul>/gm, \"<ul>\");\n            text = text.replace(/\\<\\/li>\\s*\\<li>\\s*\\<ol>/gm, \"<ol>\");\n        }\n        return `\\n${text.trim()}\\n`;\n    }\n}\n\n/**\nla preselectRegex seleziona solamente la prima e la quarta lista. se non ci fosse il ritorna a capo finale non prenderebbe\nneanche l'ultima\n\nasddasd\n\n* elem 1\n* elem 2\n\t- child 1\n\t\t* child 2 \n\t\t\t* child 2 \n\t* child 2 \n\nasd\n\t\t* child 1\n* elem 3\n\t* child 1\n\nasd\n\n\nasd\n\n* elem 1\n* elem 2\n\t1. child 1\n\t2. child 2 \nasd\n\nasd\n\n\t\t* child 1\n* elem 3\n\t* child 1\n \n */","import {ParsingRule} from \"./rule\";\n\nexport class LineRule extends ParsingRule {\n    constructor() {\n        super(/\\n-{3,}/g);\n    }\n\n    replace(): string {\n        return \"<hr />\"\n    }\n}","import { ParsingRule } from \"./rule\";\n\nexport interface CodeBlockRender {\n    renderCode(language: string, code: string) : string;\n}\n\nexport class PlainCodeBlockRenderer implements CodeBlockRender {\n    renderCode(language, code): string {\n        return `<pre class=\"${language}\">${code}</pre>`;\n    }\n}\n\nexport class CodeBlockRule extends ParsingRule {\n    codeRenderer: CodeBlockRender;\n\n    constructor(codeRenderer: CodeBlockRender = new PlainCodeBlockRenderer()) {\n        super(/```([a-z]*)\\n([\\s\\S]*?)\\n```/g);\n        this.codeRenderer = codeRenderer;\n    }\n\n    replace(match, language, code): string {\n        return this.codeRenderer.renderCode(language, code);\n    }\n}"],"sourceRoot":""}